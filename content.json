{"pages":[],"posts":[{"title":"article tile","text":"","link":"/2019/05/14/article-tile/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","link":"/2019/05/14/hello-world/"},{"title":"Map接口","text":"Map就是用来存储“key-value对”的。Map中存储的“键值对”通过键来标识，所以“键值对”不能重复Map接口的实现类: HashMap TreeMap HashTable PropertiesHashMap的底层原理 底层实现采用了哈希表 TreeMap的应用（红黑二叉树的典型表现）Set接口","link":"/2019/05/14/manny-bug/"},{"title":"JAVA/IO接口","text":"Collection表示一组对象，它是集中、收集的意思。Collection接口的两个子接口是List、Set接口 public class TestList{ public static void main(String[] args){ Collection&lt;String&gt; c = new ArrayList&lt;&gt;();// System.out.println(c.size()); System.out.println(c.isEmpty()); c.add(&quot;深入理解Collection&quot;)；//添加元素，因为已经规定了String泛型，所以只能放入字符串 c.add();//添加 c.remove();//移除操作 c.clear();//清除 Object[] objs = c.toArray();//转化出一个Object数组 c.contains();//判断是否包含某元素 }ArrayListList是有序可重复的容器 有序：list中每个元素都有索引标记。可以根据元素的索引（在list中的位置）访问元素，从而精确控制这些元素 可重复：list允许加入重复的元素。更确切的讲，list通常允许满足e1.equals(e2)的元素重复加入容器。 list接口常用的实现类： ArrayList LinkedList Vector(线程安全) 手工实现ArrayListpublic class SxtArrayList{ private Object[] elementData; private int size; private static int DEFAT_CAPACITY = 10; public SxtArrayList(){ elementData = new Object[DEFAT_CAPACITY = 10]; } public SxtArrayList(int capacity){ elementData = new Object[capacity]; } public void add(Object obj){ elementData[size++] = obj; } @override public String toString(){ StringBuilder sb = new StringBuilder(); //[a, b, c] sb.append(&quot;[&quot;); for(int i=0;i&lt;size;i++){ sb.append(obj+&quot;,&quot;); } sb.setCharAt(sb.length()-1,&quot;]&quot;); return elementData.toString(); } public static void main(String[] args){ SxtArrayList s1 = new SxtArrayList(20); s1.add(&quot;&quot;); s1.add(&quot;&quot;) } }VectorVector底层是用数组实现的list，相关的方法都加了同步检测，因此“线程安全，效率低”。 如何选用List常用接口的实现类 需要线程安全时，用Vector. 不存在线程安全问题时，并且查找较多用ArrayList(一般使用它)。 不存在线程安全问题时，增加或删除元素较多应LinkedList。","link":"/2019/05/15/JAVA-IO接口/"}],"tags":[{"name":"-JAVA学习笔记","slug":"JAVA学习笔记","link":"/tags/JAVA学习笔记/"}],"categories":[]}